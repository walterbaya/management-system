package com.management.management.model;

import jakarta.persistence.*;
import lombok.*;

import java.util.Date;

@Entity
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@ToString
@DiscriminatorColumn(name = "en_fabrica")
@Table(name = "articulos")
public class Product {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private int id;

    @Column(name = "nombre_articulo")
    private Integer name;

    @Column(name = "talle")
    private Integer size;

    @Column(name = "color")
    private String color;

    @Column(name = "cuero")
    private String leatherType;

    @Column(name = "tipo")
    private String shoeType;

    //Esto deberia ser un enum por ejemplo
    @Column(name = "genero")
    private Boolean gender;
    @Column(name = "precio")
    private Double price;

    @Column(name = "cantidad")
    private Integer numberOfElements;
    
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true; // Son el mismo objeto
        }
        if (obj == null || getClass() != obj.getClass()) {
            return false; // No es del mismo tipo
        }
        Product product = (Product) obj; // Hacer el cast

        // Comparar los campos
        return (this.color != null && this.color.equals(product.color)) &&
               (this.gender != null && this.gender.equals(product.gender)) &&
               (this.leatherType != null && this.leatherType.equals(product.leatherType)) &&
               (this.name != null && this.name.equals(product.name)) &&
               (this.shoeType != null && this.shoeType.equals(product.shoeType)) &&
               (this.size != null && this.size.equals(product.size)) &&
                (this.numberOfElements != null && this.numberOfElements.equals(product.numberOfElements));
    }


}
